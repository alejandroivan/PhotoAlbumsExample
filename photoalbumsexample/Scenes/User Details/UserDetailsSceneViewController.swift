//
//  UserDetailsSceneViewController.swift
//  photoalbumsexample
//
//  Created by Alejandro Melo Domínguez on 19-02-20.
//  Copyright (c) 2020 Alejandro Melo Domínguez. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol UserDetailsSceneDisplayLogic: class {
    func toggleFavoriteStatus()
    func refreshScreen(viewModel: UserDetailsScene.UpdatedData.ViewModel)
    func didSelectShowAlbums()
}

protocol UserDetailsSceneTableViewLogic: class {
    var tableViewDataSource: UserDetailsSceneTableViewDataSource? { get set }
    var isUserFavorite: Bool { get }
}

class UserDetailsSceneViewController: UIViewController, UserDetailsSceneDisplayLogic, UserDetailsSceneTableViewLogic {
    var interactor: UserDetailsSceneBusinessLogic?
    var router: (NSObjectProtocol & UserDetailsSceneRoutingLogic & UserDetailsSceneDataPassing)?

    var tableView = UITableView()
    weak var headerView: UserDetailsHeaderView?

    var detailsInteractor: UserDetailsSceneDataStore? {
        return interactor as? UserDetailsSceneDataStore
    }

    var tableViewDataSource: UserDetailsSceneTableViewDataSource? {
        didSet {
            tableView.dataSource = tableViewDataSource
        }
    }

    var tableViewDelegate: UserDetailsSceneTableViewDelegate? {
        didSet {
            tableView.delegate = tableViewDelegate
        }
    }

    var isUserFavorite: Bool {
        return detailsInteractor?.user?.isFavorite ?? false
    }

    // MARK: Object lifecycle

    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }

    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }

    // MARK: Setup

    private func setup() {
        let viewController = self
        let interactor = UserDetailsSceneInteractor()
        let presenter = UserDetailsScenePresenter()
        let router = UserDetailsSceneRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
        setupHeaderView()
        setupTableView()
    }

    func setupHeaderView() {
        let header = UserDetailsHeaderView(viewController: self)
        view.addSubview(header)
        headerView = header

        NSLayoutConstraint.activate([
            header.leadingAnchor.constraint(equalTo: view.leadingAnchor),
            header.trailingAnchor.constraint(equalTo: view.trailingAnchor),
            header.topAnchor.constraint(equalTo: getTopAnchor()),
            header.heightAnchor.constraint(greaterThanOrEqualToConstant: 0)
        ])
    }

    func setupTableView() {
        view.addSubview(tableView)

        tableView.translatesAutoresizingMaskIntoConstraints = false
        tableView.bounces = false
        tableView.separatorColor = Colors.Separators.background
        tableView.tableFooterView = UIView() // Avoids drawing more cells than available

        NSLayoutConstraint.activate([
            tableView.topAnchor.constraint(equalTo: headerView?.bottomAnchor ?? getTopAnchor()),
            tableView.bottomAnchor.constraint(equalTo: view.bottomAnchor),
            tableView.leadingAnchor.constraint(equalTo: view.leadingAnchor),
            tableView.trailingAnchor.constraint(equalTo: view.trailingAnchor),
        ])

        tableViewDataSource = UserDetailsSceneTableViewDataSource(viewController: self)
        tableViewDelegate = UserDetailsSceneTableViewDelegate(viewController: self)
        tableView.register(UsersTableViewCell.self, forCellReuseIdentifier: "UsersTableViewCell")
    }

    private func getTopAnchor() -> NSLayoutYAxisAnchor {
        if #available(iOS 11.0, *) {
            return view.safeAreaLayoutGuide.topAnchor
        } else {
            return topLayoutGuide.bottomAnchor
        }
    }

    private func updateDetailsView(with viewModel: UserDetailsScene.UpdatedData.ViewModel) {
        guard let headerView = headerView else { return }
        headerView.name = viewModel.name
        headerView.phone = viewModel.phone
    }

    // MARK: View lifecycle

    override func viewDidLoad() {
        super.viewDidLoad()
        view.backgroundColor = Colors.ViewController.background
    }

    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)

        let request = UserDetailsScene.UpdatedData.Request()
        interactor?.presentUserData(request: request)
    }

    // MARK: Do something

    func toggleFavoriteStatus() {
        let request = UserDetailsScene.MarkAsFavorite.Request()
        interactor?.toggleFavoriteStatus(request: request)
    }

    func refreshScreen(viewModel: UserDetailsScene.UpdatedData.ViewModel) {
        title = viewModel.screenTitle
        tableView.reloadData()
        updateDetailsView(with: viewModel)
    }

    func didSelectShowAlbums() {
        router?.routeToUserAlbums(user: detailsInteractor?.user)
    }
}
